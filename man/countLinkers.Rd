% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linker_functions.R
\name{countLinkers}
\alias{countLinkers}
\title{Trim and count the variable sequences in fastq read files}
\usage{
countLinkers(
  fnames,
  deg_codons,
  leftseq,
  rightseq,
  linklen,
  cutadapt,
  parent = NA
)
}
\arguments{
\item{fnames}{Filename indicating the location of sequencing reads. For 
paired-end reads only the first (R1) file needs to be included.}

\item{deg_codons}{List of characters indicating the bases used at each 
position of sequence. Only sequences encoded by the provided bases including
degenerate bases will be counted.}

\item{leftseq}{Character indicating the constant sequence on the 5' side of 
variable sequence. N can be used to indicate any base is allowed at certain
positions.}

\item{rightseq}{Character indicating the constant sequence on the 3' side 
of variable sequence. N can be used to indicate any base is allowed at 
certain positions.}

\item{linklen}{Integer indicating the number of basepairs that comprise the
mutated linker sequence (or mutated sequence in general).}

\item{cutadapt}{Character indicating the full path to installation of the 
software cutadapt (https://cutadapt.readthedocs.io/)}

\item{parent}{Character string of the parent sequence used for cloning 
library. This argument allows for a single sequence not included in 
degenerate library to be included in processing steps in the event there is 
carryover of a single sequence during cloning process.}
}
\value{
No return. Writes files containing trimmed reads and read counts for 
each sequence in each file that can later be concatenated using 
the function read.Linker.Counts().
}
\description{
This function is used to process raw sequencing reads to trim the constant
regions. The bases encoded by indicated degenerate bases should remain
after trimming which are then counted and saved to a new counts file. This 
function should only need to be run one time to produce saved fils can be
reused by read.Linker.Counts().
}
\examples{
\dontrun{
fnames <- "inst/extdata/PyronicSF_example_R1.fastq.gz"
leftseq <- "^NNNNNACGTGAGACAGAATTTTGAGCTCCTG"
rightseq <- "^NNNNNTAGACACGAGTGGCAGCATTTCGCGCCGAGAATA"
deg_codons <- c(rep(c("S", "N", "A"), 2), rep(c("V", "S", "T"), 2))
cutadapt <- "/home/jnk/software/anaconda3/bin/cutadapt"
countLinkers(fnames = fnames, deg_codons = deg_codons, 
leftseq = leftseq, rightseq = rightseq, linklen = 6, cutadapt = cutadapt)
}
}
